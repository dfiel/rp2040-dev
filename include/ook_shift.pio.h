// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------- //
// ook_shift //
// --------- //

#define ook_shift_wrap_target 0
#define ook_shift_wrap 10

#define ook_shift_offset_start 9u

static const uint16_t ook_shift_program_instructions[] = {
            //     .wrap_target
    0xc004, //  0: irq    nowait 4                   
    0x20c5, //  1: wait   1 irq, 5                   
    0xbf42, //  2: nop                           [31]
    0xa542, //  3: nop                           [5] 
    0x0009, //  4: jmp    9                          
    0xbf42, //  5: nop                           [31]
    0xa542, //  6: nop                           [5] 
    0xc004, //  7: irq    nowait 4                   
    0x20c5, //  8: wait   1 irq, 5                   
    0x6021, //  9: out    x, 1                       
    0x0025, // 10: jmp    !x, 5                      
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ook_shift_program = {
    .instructions = ook_shift_program_instructions,
    .length = 11,
    .origin = -1,
};

static inline pio_sm_config ook_shift_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ook_shift_wrap_target, offset + ook_shift_wrap);
    return c;
}

static inline void ook_shift_program_init(PIO pio, uint sm, uint offset, float div) {
    pio_sm_config c = ook_shift_program_get_default_config(offset);
    sm_config_set_out_shift(&c, true, true, 8);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    sm_config_set_clkdiv(&c, div);
    pio_sm_init(pio, sm, offset + ook_shift_offset_start, &c);
    pio_sm_set_enabled(pio, sm, true);
}

#endif
