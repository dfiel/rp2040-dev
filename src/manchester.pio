.program manchester
.side_set 1 opt


; Side-set bit 0 must be mapped to the GPIO used for TX.
; Autopull must be enabled -- this program does not care about the threshold.
; The program starts at the public label 'start'.

.wrap_target
do_1:
    set y, 15
lp1:
    nop         side 1  
    jmp y-- lp1 side 0     ; Loop (y + 1) times, y is a 32 bit number
do_0:
    set y, 24
lp3:
    jmp y-- lp3            ; Delay for (y + 1) cycles
    jmp x-- get_bit        ; jump to get_bit if 1
    set y, 15
lp4:
    nop         side 1
    jmp y-- lp4 side 0     ; Loop (y + 1) times
public start:
get_bit:
    out x, 1               ; Always shift out one bit from OSR to X, so we can
    jmp !x do_0            ; branch on it. Autopull refills the OSR when empty.
.wrap

% c-sdk {
static inline void manchester_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {
    pio_sm_set_pins_with_mask(pio, sm, 0, 1u << pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
    pio_gpio_init(pio, pin);

    pio_sm_config c = manchester_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_shift(&c, true, true, 8);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    sm_config_set_clkdiv(&c, div);
    pio_sm_init(pio, sm, offset + manchester_offset_start, &c);

    pio_sm_set_enabled(pio, sm, true);
}
%}